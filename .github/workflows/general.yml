on:
  push:

jobs:
  check-client:
    name: Check/Test Client
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@v2
    - name: Code test
      id: test
      run: ./go.sh test_client
  check-server:
    name: Check/Test Server
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@v2
    - name: Code test
      id: test
      run: ./go.sh test_server
  publish-server:
    name: Publish Server
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: 
    - check-server
    - check-client
    steps:
    - name: Checkout Source
      uses: actions/checkout@v2        
    - name: Login to ECR
      id: ecr
      uses: jwalton/gh-ecr-login@v3
      with:
        access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: us-east-1

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64
        push: true
        tags: 041260952467.dkr.ecr.ap-southeast-2.amazonaws.com/i18u/server:${{ github.sha }}
  deploy-infrastructure:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: publish-server
    concurrency: "deploy-infrastructure"
    steps:
    - name: Checkout Source
      uses: actions/checkout@v2
    - name: Deploy via CDK
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
        AWS_DEFAULT_REGION: ap-southeast-2
        CLOUDFLARED_TUNNEL_TOKEN: ${{ secrets.CLOUDFLARED_TUNNEL_TOKEN }}
      run: ./go.sh deploy ${{ github.sha }}
  publish-client:
    name: Publish Client
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: deploy-infrastructure
    concurrency: "publish-client"
    steps:
    - name: Checkout Source
      uses: actions/checkout@v2
    - name: Sync assets to Server
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
        AWS_DEFAULT_REGION: ap-southeast-2
      run: ./go.sh publish_client
